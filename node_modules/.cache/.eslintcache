[{"C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\index.js":"1","C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\App.js":"2","C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\reportWebVitals.js":"3","C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\serviceWorkerRegistration.js":"4","C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\service-worker.js":"5","C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\api.js":"6","C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\components\\CitySearch.js":"7","C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\components\\EventList.js":"8","C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\components\\NumberOfEvents.js":"9","C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\mock-data.js":"10","C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\components\\Event.js":"11"},{"size":853,"mtime":1689206484432,"results":"12","hashOfConfig":"13"},{"size":1123,"mtime":1691348591370,"results":"14","hashOfConfig":"13"},{"size":364,"mtime":1689206484453,"results":"15","hashOfConfig":"13"},{"size":5064,"mtime":1689206484506,"results":"16","hashOfConfig":"13"},{"size":2837,"mtime":1689206484475,"results":"17","hashOfConfig":"13"},{"size":2692,"mtime":1691374167745,"results":"18","hashOfConfig":"13"},{"size":1683,"mtime":1691348673756,"results":"19","hashOfConfig":"13"},{"size":292,"mtime":1690734610208,"results":"20","hashOfConfig":"13"},{"size":661,"mtime":1691029760672,"results":"21","hashOfConfig":"13"},{"size":51858,"mtime":1690853042335,"results":"22","hashOfConfig":"13"},{"size":709,"mtime":1691022412301,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3ac001",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\index.js",[],[],"C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\App.js",["61","62"],[],"import './App.css';\nimport EventList from './components/EventList';\nimport CitySearch from './components/CitySearch';\nimport NumberOfEvents from './components/NumberOfEvents';\nimport { useEffect, useState } from 'react';\nimport { extractLocations, getEvents } from './api';\n\nconst App = () => {\n  const [events, setEvents] = useState([]);\n  const [currentNOE, setCurrentNOE] = useState(32);\n  const [allLocations, setAllLocations] = useState([]);\n  const [currentCity, setCurrentCity] = useState('See all cities');\n\n  const fetchData = async () => {\n    const allEvents = await getEvents();\n    const filteredEvents = currentCity === 'See all cities' ?\n      allEvents: \n      allEvents.filter(event => event.location === currentCity)\n      setEvents(filteredEvents.slice(0,currentNOE));\n      setAllLocations(extractLocations(allEvents));\n  };\n\n  useEffect(() => {\n    fetchData();\n  },[currentCity]);\n\n  return(\n    <div className='App'>\n      <CitySearch allLocations={allLocations}\n      setCurrentCity={setCurrentCity}/>\n      <EventList events={events}/>\n      <NumberOfEvents/>\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\reportWebVitals.js",[],[],"C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\serviceWorkerRegistration.js",[],[],"C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\service-worker.js",[],["63","64","65","66"],[],"C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\api.js",["67","68"],[],"C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\components\\CitySearch.js",["69","70"],[],"// src/components/CitySearch\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst CitySearch = ({ allLocations, setCurrentCity }) => {\r\n    const [showSuggestions, setShowSuggestions] = useState(false);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [suggestions, setSuggestions] = useState ([]);\r\n    const handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const filteredLocations = allLocations ? allLocations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        }) : [];\r\n\r\n        setQuery(value);\r\n        setSuggestions(filteredLocations);\r\n    };\r\n\r\n    useEffect(() => {\r\n      setSuggestions(allLocations);\r\n    }, [`${allLocations}`]);\r\n\r\n    const handleItemClicked = (event) => {\r\n        const value = event.target.textContent;\r\n        setQuery(value);\r\n        setShowSuggestions(false); \r\n        setCurrentCity(value);\r\n      };\r\n\r\n    return(\r\n        <div id=\"city-search\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          placeholder=\"Search for a city\"\r\n          value={query}\r\n          onFocus={() => setShowSuggestions(true)}\r\n          onChange={handleInputChanged}\r\n        />\r\n        {showSuggestions ?\r\n          <ul className=\"suggestions\">\r\n            {suggestions.map((suggestion) => {\r\n              return <li onClick={handleItemClicked} key={suggestion}>{suggestion}</li>\r\n            })}\r\n            <li key='See all cities' onClick={handleItemClicked}>\r\n              <b>See all cities</b>\r\n            </li>\r\n          </ul>\r\n          : null\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CitySearch;","C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\components\\EventList.js",[],[],"C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\components\\NumberOfEvents.js",[],[],"C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\mock-data.js",[],[],"C:\\Users\\chica\\OneDrive\\Documents\\GitHub\\meet\\src\\components\\Event.js",["71"],[],"// src/components/Event.js\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Event = ({event}) => {\r\n    const [showDetails, setShowDetails] = useState(false);\r\n\r\n    return( \r\n        <li>\r\n            <div>\r\n                {/* event title  */}\r\n                <h1>{event.summary}</h1>\r\n                <div>{event.location}</div>\r\n                <div>{event.created}</div>\r\n                {showDetails && <div>{event.description}</div>}\r\n                <button className='detail-button' onClick={() => setShowDetails(!showDetails)}>\r\n                   {showDetails? \"hide details\": \"show details\"}\r\n                </button>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Event;",{"ruleId":"72","severity":1,"message":"73","line":10,"column":22,"nodeType":"74","messageId":"75","endLine":10,"endColumn":35},{"ruleId":"76","severity":1,"message":"77","line":25,"column":5,"nodeType":"78","endLine":25,"endColumn":18,"suggestions":"79"},{"ruleId":"80","severity":2,"message":"81","line":22,"column":18,"nodeType":"74","messageId":"82","endLine":22,"endColumn":22,"suppressions":"83"},{"ruleId":"80","severity":2,"message":"81","line":53,"column":31,"nodeType":"74","messageId":"82","endLine":53,"endColumn":35,"suppressions":"84"},{"ruleId":"80","severity":2,"message":"81","line":66,"column":1,"nodeType":"74","messageId":"82","endLine":66,"endColumn":5,"suppressions":"85"},{"ruleId":"80","severity":2,"message":"81","line":68,"column":5,"nodeType":"74","messageId":"82","endLine":68,"endColumn":9,"suppressions":"86"},{"ruleId":"87","severity":1,"message":"88","line":25,"column":76,"nodeType":"89","messageId":"90","endLine":25,"endColumn":77},{"ruleId":"87","severity":1,"message":"88","line":57,"column":93,"nodeType":"89","messageId":"90","endLine":57,"endColumn":94},{"ruleId":"76","severity":1,"message":"91","line":21,"column":8,"nodeType":"78","endLine":21,"endColumn":27,"suggestions":"92"},{"ruleId":"76","severity":1,"message":"93","line":21,"column":9,"nodeType":"94","endLine":21,"endColumn":26},{"ruleId":"72","severity":1,"message":"95","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":19},"no-unused-vars","'setCurrentNOE' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["96"],"no-restricted-globals","Unexpected use of 'self'.","defaultMessage",["97"],["98"],["99"],["100"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'allLocations'. Either include it or remove the dependency array. If 'setSuggestions' needs the current value of 'allLocations', you can also switch to useReducer instead of useState and read 'allLocations' in the reducer.",["101"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","TemplateLiteral","'useEffect' is defined but never used.",{"desc":"102","fix":"103"},{"kind":"104","justification":"105"},{"kind":"104","justification":"105"},{"kind":"104","justification":"105"},{"kind":"104","justification":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [currentCity, fetchData]",{"range":"108","text":"109"},"directive","","Update the dependencies array to be: [allLocations]",{"range":"110","text":"111"},[887,900],"[currentCity, fetchData]",[730,749],"[allLocations]"]